{"version":3,"file":"ImageCards.js","sources":["demo/ImageCards.js"],"sourcesContent":["//\n//\n//    THIS IS THE PRECOMPILED VERSION ON THIS FILE\n//\n//    LOOK INTO DIST FOLDER FOR COMPILED VERSION TE BE\n//\n//    INCLUDED IN THE BROWSER\n//\n\nimport React from 'react';\n\nconst typeInfo = {\n  // Compulsory\n  type: 'ImageCards',\n  displayName: 'Image Cards',\n  group: 'Custom Components',\n  required: false,\n\n  // Component specific fields\n  title: 'My image component',\n  images: [\n    'http://ingridwu.dmmdmcfatter.com/wp-content/uploads/2015/01/placeholder.png',\n  ],\n\n  newImageText: '',\n};\n\n\n// For Text Fields the initialState function will only return an object.\nconst initialState = () => Object.assign({}, typeInfo);\n\n// When configuration is open, this is what is going to be displayed\n/**\n * @method RenderConfigMode\n * @param  {Object} state : State\n * @param  {Function} update : State -> void // Will trigger a re-render\n */\nconst RenderEditor = ({ state, update }) => {\n  const updateNewImageText = event => {\n    const text = event.target.value;\n    const newState = Object.assign(\n      {},\n      state,\n      { newImageText: text }\n    );\n\n    update(newState);\n  };\n\n  const addNewImage = event => {\n    if (event.key !== 'Enter') { return; }\n    const text = event.target.value;\n    const newState = Object.assign(\n      {},\n      state,\n      { newImageText: '',\n        images: state.images.concat([text]),\n      }\n    );\n\n    update(newState);\n  };\n\n  return (\n    <div>\n      {state.images.map(img => <img alt={img} className=\"ImageCards-card\" src={img} />)}\n\n      {!state.configShowing\n        ? null\n        : (\n        <div className=\"fl-fb-Field-config\">\n          <input\n            type=\"text\"\n            value={state.newImageText}\n            onChange={updateNewImageText}\n            onKeyDown={addNewImage}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst ImageCards = {\n  info: typeInfo,\n  initialState,\n  RenderEditor,\n};\n\nexport default ImageCards;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AASA,AAEA,IAAM,WAAW;;QAET,YAFS;eAGF,aAHE;SAIR,mBAJQ;YAKL,KALK;;;SAQR,oBARQ;UASP,CACN,6EADM,CATO;;gBAaD;CAbhB;;;AAkBA,IAAM,eAAe,SAAf,YAAe;SAAM,OAAO,MAAP,CAAc,EAAd,EAAkB,QAAlB,CAAN;CAArB;;;;;;;;AAQA,IAAM,eAAe,SAAf,YAAe,OAAuB;MAApB,KAAoB,QAApB,KAAoB;MAAb,MAAa,QAAb,MAAa;;MACpC,qBAAqB,SAArB,kBAAqB,QAAS;QAC5B,OAAO,MAAM,MAAN,CAAa,KAA1B;QACM,WAAW,OAAO,MAAP,CACf,EADe,EAEf,KAFe,EAGf,EAAE,cAAc,IAAhB,EAHe,CAAjB;;WAMO,QAAP;GARF;;MAWM,cAAc,SAAd,WAAc,QAAS;QACvB,MAAM,GAAN,KAAc,OAAlB,EAA2B;;;QACrB,OAAO,MAAM,MAAN,CAAa,KAA1B;QACM,WAAW,OAAO,MAAP,CACf,EADe,EAEf,KAFe,EAGf,EAAE,cAAc,EAAhB;cACU,MAAM,MAAN,CAAa,MAAb,CAAoB,CAAC,IAAD,CAApB;KAJK,CAAjB;;WAQO,QAAP;GAXF;;SAeE;;IAAA;IACG,MAAM,MAAN,CAAa,GAAb,CAAiB;aAAO,6BAAK,KAAK,GAAV,EAAe,WAAU,iBAAzB,EAA2C,KAAK,GAAhD,GAAP;KAAjB,CADH;IAGG,CAAC,MAAM,aAAP,GACG,IADH,GAGC;;MAAA,EAAK,WAAU,oBAAf;MACE;cACO,MADP;eAES,MAAM,YAFf;kBAGY,kBAHZ;mBAIa;;;GAZrB;CA1BF;;AA8CA,IAAM,aAAa;QACX,QADW;4BAAA;;CAAnB,CAMA;;;;","sourceRoot":"/source/"}
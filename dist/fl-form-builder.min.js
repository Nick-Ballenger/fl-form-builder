function FormComponent(a){if(!(this instanceof FormComponent))return new FormComponent;if("string"!=typeof a)throw new Error("FormComponent: "+a+' is not a valid "name" parameter.');this.element=this.createElement("div"),this.init(a)}function FormFabric(){function a(){var a=document.createElement("select");return b.forEach(function(b,c){var d=document.createElement("option");d.setAttribute("value",c),d.innerText=b.desc,a.appendChild(d)}),a}if(!(this instanceof FormFabric))return new FormFabric;this.element=document.createElement("div");var b=[{desc:"Radio buttons",constr:RadioBtns},{desc:"Checkboxes",constr:Checkboxes},{desc:"Text box",constr:TextBox},{desc:"Text area",constr:TextArea},{desc:"Dropdown",constr:Dropdown}];this.init=function(){var c=a(),d=document.createElement("button");d.innerText="Add",d.addEventListener("click",function(){var a=c.selectedIndex;console.log("Create a ",b[a].desc)}),this.element.appendChild(d),this.element.appendChild(c)},this.init()}function Checkboxes(a){return this instanceof Checkboxes?void FormComponent.apply(this):new Checkboxes}function Dropdown(a){return this instanceof Dropdown?void FormComponent.apply(this):new Dropdown}function RadioBtns(a){return this instanceof RadioBtns?void FormComponent.apply(this):new RadioBtns}function TextArea(a){return this instanceof TextArea?void FormComponent.apply(this):new TextArea}function TextBox(a){return this instanceof TextBox?void FormComponent.apply(this):new TextBox}FormComponent.prototype.destroy=function(){this.element.remove()},FormComponent.prototype.required=function(a){var b=this.element.children;b.forEach(function(a){a.setAttribute("required",!0)})},Checkboxes.prototype.init=function(a){this.name=a+"[]",this.required=!1},Checkboxes.prototype.add=function(a,b){if(!a)throw new Error("Checkboxes.add(): No value parameter provided.");this.required&&this.countBoxes()>1&&console.error('Checkboxes: To be "required" there can only be one checkbox in the group');var c=document.createElement("input");c.setAttribute("type","checkbox"),c.setAttribute("name",this.name),c.setAttribute("value",a),this.required&&c.setAttribute("required",!0);var d=document.createTextNode(b||a),e=document.createElement("label");e.appendChild(c),e.appendChild(d),this.element.appendChild(e)},Checkboxes.prototype.required=function(a){if(this.countBoxes()>1&&a)return console.error('Checkboxes: To be "required" there can only be one checkbox in the group'),!1;this.required=a;var b=this.getBoxes();return b[0]&&b[0].setAttribute("required",a),!0},Checkboxes.prototype.countBoxes=function(){return this.element.childElementCount},Checkboxes.prototype.getBoxes=function(){return[].slice.call(this.element.children)},Dropdown.prototype.init=function(){var a=document.createElement("select"),b=document.createElement("option");b.innerText="Select an option",b.setAttribute("value",""),b.setAttribute("disabled",!0),b.setAttribute("selected",!0),a.appendChild(b),this.element.appendChild(a)},Dropdown.prototype.add=function(a,b){document.createElement("option")},RadioBtns.prototype.init=function(a){},TextArea.prototype.init=function(a){},TextBox.prototype.init=function(a){},xController(function(a){a.innerText="I'm working!";var b=new FormFabric;a.appendChild(b.element)});
//# sourceMappingURL=fl-form-builder.map
{"version":3,"file":"index.js","sources":["node_modules/fl-assert/dist/assert.js","src/js/EventHub.js","src/js/DefaultFields/FieldCreatorPropType.js","src/js/ControlBar.js","src/js/Field.js","src/js/Fields.js","src/js/FormBuilder.js","src/js/DefaultFields/TextBox.js","src/js/index.js"],"sourcesContent":["// Bug checking function that will throw an error whenever\n// the condition sent to it is evaluated to false\n/**\n * Processes the message and outputs the correct message if the condition\n * is false. Otherwise it outputs null.\n * @api private\n * @method processCondition\n * @param  {Boolean} condition - Result of the evaluated condition\n * @param  {String} errorMessage - Message explainig the error in case it is thrown\n * @return {String | null}  - Error message if there is an error, nul otherwise.\n */\nfunction processCondition(condition, errorMessage) {\n  if (!condition) {\n    var completeErrorMessage = '';\n    var re = /at ([^\\s]+)\\s\\(/g;\n    var stackTrace = new Error().stack;\n    var stackFunctions = [];\n\n    var funcName = re.exec(stackTrace);\n    while (funcName && funcName[1]) {\n      stackFunctions.push(funcName[1]);\n      funcName = re.exec(stackTrace);\n    }\n\n    // Number 0 is processCondition itself,\n    // Number 1 is assert,\n    // Number 2 is the caller function.\n    if (stackFunctions[2]) {\n      completeErrorMessage = stackFunctions[2] + ': ' + completeErrorMessage;\n    }\n\n    completeErrorMessage += errorMessage;\n    return completeErrorMessage;\n  }\n\n  return null;\n}\n\n/**\n * Throws an error if the boolean passed to it evaluates to false.\n * To be used like this:\n * \t\tassert(myDate !== undefined, \"Date cannot be undefined.\");\n * @api public\n * @method assert\n * @param  {Boolean} condition - Result of the evaluated condition\n * @param  {String} errorMessage - Message explainig the error in case it is thrown\n * @return void\n */\nfunction assert(condition, errorMessage) {\n  var error = processCondition(condition, errorMessage);\n  if (typeof error === 'string') {\n    throw new Error(error);\n  }\n}\n\n/**\n * Logs a warning if the boolean passed to it evaluates to false.\n * To be used like this:\n * \t\tassert.warn(myDate !== undefined, \"No date provided.\");\n * @api public\n * @method warn\n * @param  {Boolean} condition - Result of the evaluated condition\n * @param  {String} errorMessage - Message explainig the error in case it is thrown\n * @return void\n */\nassert.warn = function warn(condition, errorMessage) {\n  var error = processCondition(condition, errorMessage);\n  if (typeof error === 'string') {\n    console.warn(error);\n  }\n};\n\nexport default assert;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlcyI6WyJhc3NlcnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQnVnIGNoZWNraW5nIGZ1bmN0aW9uIHRoYXQgd2lsbCB0aHJvdyBhbiBlcnJvciB3aGVuZXZlclxuLy8gdGhlIGNvbmRpdGlvbiBzZW50IHRvIGl0IGlzIGV2YWx1YXRlZCB0byBmYWxzZVxuLyoqXG4gKiBQcm9jZXNzZXMgdGhlIG1lc3NhZ2UgYW5kIG91dHB1dHMgdGhlIGNvcnJlY3QgbWVzc2FnZSBpZiB0aGUgY29uZGl0aW9uXG4gKiBpcyBmYWxzZS4gT3RoZXJ3aXNlIGl0IG91dHB1dHMgbnVsbC5cbiAqIEBhcGkgcHJpdmF0ZVxuICogQG1ldGhvZCBwcm9jZXNzQ29uZGl0aW9uXG4gKiBAcGFyYW0gIHtCb29sZWFufSBjb25kaXRpb24gLSBSZXN1bHQgb2YgdGhlIGV2YWx1YXRlZCBjb25kaXRpb25cbiAqIEBwYXJhbSAge1N0cmluZ30gZXJyb3JNZXNzYWdlIC0gTWVzc2FnZSBleHBsYWluaWcgdGhlIGVycm9yIGluIGNhc2UgaXQgaXMgdGhyb3duXG4gKiBAcmV0dXJuIHtTdHJpbmcgfCBudWxsfSAgLSBFcnJvciBtZXNzYWdlIGlmIHRoZXJlIGlzIGFuIGVycm9yLCBudWwgb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBwcm9jZXNzQ29uZGl0aW9uKGNvbmRpdGlvbiwgZXJyb3JNZXNzYWdlKSB7XG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgbGV0IGNvbXBsZXRlRXJyb3JNZXNzYWdlID0gJyc7XG4gICAgY29uc3QgcmUgPSAvYXQgKFteXFxzXSspXFxzXFwoL2c7XG4gICAgY29uc3Qgc3RhY2tUcmFjZSA9IG5ldyBFcnJvcigpLnN0YWNrO1xuICAgIGNvbnN0IHN0YWNrRnVuY3Rpb25zID0gW107XG5cbiAgICBsZXQgZnVuY05hbWUgPSByZS5leGVjKHN0YWNrVHJhY2UpO1xuICAgIHdoaWxlIChmdW5jTmFtZSAmJiBmdW5jTmFtZVsxXSkge1xuICAgICAgc3RhY2tGdW5jdGlvbnMucHVzaChmdW5jTmFtZVsxXSk7XG4gICAgICBmdW5jTmFtZSA9IHJlLmV4ZWMoc3RhY2tUcmFjZSk7XG4gICAgfVxuXG4gICAgLy8gTnVtYmVyIDAgaXMgcHJvY2Vzc0NvbmRpdGlvbiBpdHNlbGYsXG4gICAgLy8gTnVtYmVyIDEgaXMgYXNzZXJ0LFxuICAgIC8vIE51bWJlciAyIGlzIHRoZSBjYWxsZXIgZnVuY3Rpb24uXG4gICAgaWYgKHN0YWNrRnVuY3Rpb25zWzJdKSB7XG4gICAgICBjb21wbGV0ZUVycm9yTWVzc2FnZSA9IGAke3N0YWNrRnVuY3Rpb25zWzJdfTogJHtjb21wbGV0ZUVycm9yTWVzc2FnZX1gO1xuICAgIH1cblxuICAgIGNvbXBsZXRlRXJyb3JNZXNzYWdlICs9IGVycm9yTWVzc2FnZTtcbiAgICByZXR1cm4gY29tcGxldGVFcnJvck1lc3NhZ2U7XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cblxuLyoqXG4gKiBUaHJvd3MgYW4gZXJyb3IgaWYgdGhlIGJvb2xlYW4gcGFzc2VkIHRvIGl0IGV2YWx1YXRlcyB0byBmYWxzZS5cbiAqIFRvIGJlIHVzZWQgbGlrZSB0aGlzOlxuICogXHRcdGFzc2VydChteURhdGUgIT09IHVuZGVmaW5lZCwgXCJEYXRlIGNhbm5vdCBiZSB1bmRlZmluZWQuXCIpO1xuICogQGFwaSBwdWJsaWNcbiAqIEBtZXRob2QgYXNzZXJ0XG4gKiBAcGFyYW0gIHtCb29sZWFufSBjb25kaXRpb24gLSBSZXN1bHQgb2YgdGhlIGV2YWx1YXRlZCBjb25kaXRpb25cbiAqIEBwYXJhbSAge1N0cmluZ30gZXJyb3JNZXNzYWdlIC0gTWVzc2FnZSBleHBsYWluaWcgdGhlIGVycm9yIGluIGNhc2UgaXQgaXMgdGhyb3duXG4gKiBAcmV0dXJuIHZvaWRcbiAqL1xuZnVuY3Rpb24gYXNzZXJ0KGNvbmRpdGlvbiwgZXJyb3JNZXNzYWdlKSB7XG4gIGNvbnN0IGVycm9yID0gcHJvY2Vzc0NvbmRpdGlvbihjb25kaXRpb24sIGVycm9yTWVzc2FnZSk7XG4gIGlmICh0eXBlb2YgZXJyb3IgPT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGVycm9yKTtcbiAgfVxufVxuXG4vKipcbiAqIExvZ3MgYSB3YXJuaW5nIGlmIHRoZSBib29sZWFuIHBhc3NlZCB0byBpdCBldmFsdWF0ZXMgdG8gZmFsc2UuXG4gKiBUbyBiZSB1c2VkIGxpa2UgdGhpczpcbiAqIFx0XHRhc3NlcnQud2FybihteURhdGUgIT09IHVuZGVmaW5lZCwgXCJObyBkYXRlIHByb3ZpZGVkLlwiKTtcbiAqIEBhcGkgcHVibGljXG4gKiBAbWV0aG9kIHdhcm5cbiAqIEBwYXJhbSAge0Jvb2xlYW59IGNvbmRpdGlvbiAtIFJlc3VsdCBvZiB0aGUgZXZhbHVhdGVkIGNvbmRpdGlvblxuICogQHBhcmFtICB7U3RyaW5nfSBlcnJvck1lc3NhZ2UgLSBNZXNzYWdlIGV4cGxhaW5pZyB0aGUgZXJyb3IgaW4gY2FzZSBpdCBpcyB0aHJvd25cbiAqIEByZXR1cm4gdm9pZFxuICovXG5hc3NlcnQud2FybiA9IGZ1bmN0aW9uIHdhcm4oY29uZGl0aW9uLCBlcnJvck1lc3NhZ2UpIHtcbiAgY29uc3QgZXJyb3IgPSBwcm9jZXNzQ29uZGl0aW9uKGNvbmRpdGlvbiwgZXJyb3JNZXNzYWdlKTtcbiAgaWYgKHR5cGVvZiBlcnJvciA9PT0gJ3N0cmluZycpIHtcbiAgICBjb25zb2xlLndhcm4oZXJyb3IpO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBhc3NlcnQ7XG4iXSwiZmlsZSI6ImFzc2VydC5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9\n","import assert from 'fl-assert';\n\n//\n//\n//     Singleton\n//\n//\n\nconst listeners = {};\n\nfunction on(eventName, func) {\n  listeners[eventName] = listeners[eventName]\n    ? listeners[eventName].concat([func])\n    : [func];\n}\n\nfunction trigger(eventName, data) {\n  assert.warn(listeners[eventName], `No one listening to \"${eventName}.\"`);\n  listeners[eventName].forEach(f => f(data));\n}\n\nconst EventHub = {\n  on,\n  trigger,\n};\n\n\nexport default EventHub;\n","import React from 'react';\n\nconst FieldCreatorPropType = {\n  info: React.PropTypes.shape({\n    type: React.PropTypes.string,\n    group: React.PropTypes.string,\n    displayName: React.PropTypes.string,\n  }),\n  initialState: React.PropTypes.func,\n  RenderConfigMode: React.PropTypes.func,\n  RenderFormMode: React.PropTypes.func,\n};\n\nexport default FieldCreatorPropType;\n","import React from 'react';\nimport EventHub from './EventHub';\nimport FieldCreatorPropType from './DefaultFields/FieldCreatorPropType';\n\n\nconst ButtonDropdownOption = ({ description }) => (\n  <li>\n    <a\n      href=\"#\"\n      onClick={() => EventHub.trigger('createField', description.type)}\n    >\n      {description.displayName}\n    </a>\n  </li>\n);\n\nButtonDropdownOption.propTypes = {\n  description: React.PropTypes.shape({\n    type: React.PropTypes.string,\n    displayName: React.PropTypes.string,\n    group: React.PropTypes.string,\n  }),\n};\n\nconst ButtonGroupDropdown = ({ groupName, groupButtons }) => {\n  return (\n    <div className=\"fb-ControlBar-dropdown dropdown\">\n      <button className=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">\n        {groupName}\n        <span className=\"caret\"></span>\n      </button>\n      <ul className=\"dropdown-menu\">\n        {groupButtons.map(fieldDescription => (\n          <ButtonDropdownOption description={fieldDescription} />\n        ))}\n      </ul>\n    </div>\n  );\n};\nButtonGroupDropdown.propTypes = {\n  groupName: React.PropTypes.string,\n  groupButtons: React.PropTypes.array,\n};\n\n\nconst getDescrition = typeConstructor => {\n  return {\n    type: typeConstructor.info.type,\n    displayName: typeConstructor.info.displayName,\n    group: typeConstructor.info.group,\n  };\n};\n\nconst toGroups = (groups, description) => {\n  // Add to group array if it exists. Create it if it doesn't\n  groups[description.group] = groups[description.group] // eslint-disable-line no-param-reassign\n    ? groups[description.group].concat([description])\n    : [description];\n\n  return groups;\n};\n\nconst ControlBar = ({ fieldTypes }) => {\n  const fieldGroups = fieldTypes\n    .map(getDescrition)\n    .reduce(toGroups, {});\n\n  const buttonGroups = Object.keys(fieldGroups)\n    .map(groupName => (\n      <ButtonGroupDropdown\n        groupName={groupName}\n        groupButtons={fieldGroups[groupName]}\n      />\n    ));\n\n  return (\n    <div className=\"fb-ControlBar\">\n      {buttonGroups}\n      <button className=\"btn btn-primary\"> Undo </button>\n    </div>\n  );\n};\n\nControlBar.propTypes = {\n  fieldTypes: React.PropTypes.arrayOf(FieldCreatorPropType),\n};\n\nexport default ControlBar;\n","import React from 'react';\nimport assert from 'fl-assert';\n\nconst isValidFieldState = state => {\n  return typeof state.id === 'number'\n    && typeof state.type === 'string'\n    && typeof state.group === 'string';\n};\n\nconst Field = ({ fieldState, fieldConstructor }) => {\n  assert(isValidFieldState(fieldState), `Invalid field state: ${fieldState}`);\n\n  return (\n    <div className=\"fb-Field\">\n      <div className=\"fb-Field-main\">\n        {JSON.stringify(fieldState)}\n      </div>\n      <div className=\"fb-Field-config\">\n        {JSON.stringify(fieldConstructor)}\n      </div>\n    </div>\n  );\n};\n\nField.propTypes = {\n  fieldState: React.PropTypes.object,\n  fieldConstructor: React.PropTypes.object,\n};\n\nexport default Field;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Field from './Field';\n\nconst Fields = props => {\n  const {\n    fieldStates,\n    fieldTypes,\n  } = props;\n\n  return (\n    <div>\n      {fieldStates.forEach(compState => (\n        <Field\n          fieldState={compState}\n          fieldConstructor={fieldTypes[compState.type]}\n        />\n      ))}\n    </div>\n  );\n};\n\nFields.propTypes = {\n  fieldStates: React.PropTypes.array,\n  fieldTypes: React.PropTypes.array,\n};\n\nexport default Fields;\n","import React from 'react';\nimport ControlBar from './ControlBar';\nimport Fields from './Fields';\nimport assert from 'fl-assert';\nimport FieldCreatorPropType from './DefaultFields/FieldCreatorPropType';\n\nimport EventHub from './EventHub';\n\nexport default class FormBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fieldTypes: props.fieldTypes, // TODO: Add validation here\n      fieldStates: [],\n    };\n\n    this.createField = this.createField.bind(this);\n    this.deleteField = this.deleteField.bind(this);\n    this.addFieldType = this.addFieldType.bind(this);\n\n    EventHub.on('createField', this.createField);\n    EventHub.on('deleteField', this.deleteField);\n  }\n\n  createField(fieldType) {\n    const typeConstructor = this.state.fieldTypes.find(f => f.info.type === fieldType);\n\n    assert(typeConstructor, `Field \"${fieldType}\" does not exist.`);\n\n    const initialState = typeConstructor.initialState();\n    initialState.id = Date.now();\n\n    const fieldStates = this.state.fieldStates.concat([initialState]);\n    this.setState({ fieldStates });\n  }\n\n  deleteField(fieldState) {\n    const fieldStates = this.state.fieldStates.filter(\n      state => state.id !== fieldState.id\n    );\n\n    assert(\n      fieldStates.length < this.state.fieldStates,\n      'Something weird happened. The field didn\\'t seem to be part of the existing states'\n    );\n    this.setState({ fieldStates });\n  }\n\n  addFieldType(newType) {\n    assert(\n      !this.state.fieldTypes.find(f => f.info.type === newType.info.type),\n      `The field type ${newType.info.type} already exists`\n    );\n\n    const fieldTypes = this.state.fieldTypes.concat([newType]);\n\n    this.setState({ fieldTypes });\n  }\n\n  render() {\n    const {\n      fieldTypes,\n      fieldStates,\n    } = this.state;\n\n    return (\n      <div className=\"fl-FormBuilder\">\n        <ControlBar fieldTypes={fieldTypes} />\n        <Fields fieldStates={fieldStates} fieldTypes={fieldTypes} />\n      </div>\n    );\n  }\n}\n\nFormBuilder.propTypes = {\n  fieldTypes: React.PropTypes.arrayOf(FieldCreatorPropType),\n};\n","import React from 'react';\n\n\nconst typeInfo = {\n  type: 'TextField',\n  group: 'Text Components',\n  displayName: 'Text field',\n};\n\nconst initialState = () => {\n  const componentFields = {\n    // Compulsory fields\n    required: false,\n    // Component specific fields\n    title: 'Add a title',\n    placeholder: 'Add a placeholder',\n  };\n\n  return Object.assign(\n    {},\n    typeInfo,\n    componentFields\n  );\n};\n\n// When configuration is open, this is what is going to be displayed\n/**\n * @method RenderConfigMode\n * @param  {Object} state : State\n * @param  {Function} update : State -> void // Will trigger a re-render\n */\nconst RenderConfigMode = ({ state, update }) => {\n  return (\n    <div>\n      <h2> Config Mode </h2>\n      <label>\n        Type a placeholder\n        <input type=\"text\" />\n      </label>\n    </ div>\n  );\n};\n\nconst RenderFormMode = ({ state, update }) => {\n  return (\n    <div>\n      <h2> My Title </h2>\n      <input type=\"text\" />\n    </div>\n  );\n};\n\nconst TextBox = {\n  info: typeInfo,\n  initialState,\n  RenderConfigMode,\n  RenderFormMode,\n};\n\nexport default TextBox;\n","/* globals xController */\n//\nimport ReactFormBuilder from './FormBuilder';\nimport assert from 'fl-assert';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\n\n\n// Field Types\nimport TextBox from './DefaultFields/TextBox';\n\nfunction FormBuilder(container, components = []) {\n  assert(\n    container && container.nodeName,\n    `Invalid contianer: ${container}. Container must be an HTML element.`\n  );\n\n  const defaultTypes = [\n    TextBox,\n  ];\n\n  const customFieldTypes = components.concat(defaultTypes);\n\n  ReactDOM.render(<ReactFormBuilder fieldTypes={customFieldTypes} />, container);\n\n  this.exportState = () => { throw new Error('Not working'); };\n}\n\nexport default FormBuilder;\n"],"names":["FormBuilder","ReactFormBuilder"],"mappings":";;;;;AAAA;;;;;;;;;;;AAWA,SAAS,gBAAgB,CAAC,SAAS,EAAE,YAAY,EAAE;EACjD,IAAI,CAAC,SAAS,EAAE;IACd,IAAI,oBAAoB,GAAG,EAAE,CAAC;IAC9B,IAAI,EAAE,GAAG,kBAAkB,CAAC;IAC5B,IAAI,UAAU,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC;IACnC,IAAI,cAAc,GAAG,EAAE,CAAC;;IAExB,IAAI,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnC,OAAO,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;MAC9B,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;MACjC,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAChC;;;;;IAKD,IAAI,cAAc,CAAC,CAAC,CAAC,EAAE;MACrB,oBAAoB,GAAG,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,oBAAoB,CAAC;KACxE;;IAED,oBAAoB,IAAI,YAAY,CAAC;IACrC,OAAO,oBAAoB,CAAC;GAC7B;;EAED,OAAO,IAAI,CAAC;CACb;;;;;;;;;;;;AAYD,SAAS,MAAM,CAAC,SAAS,EAAE,YAAY,EAAE;EACvC,IAAI,KAAK,GAAG,gBAAgB,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;EACtD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IAC7B,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;GACxB;CACF;;;;;;;;;;;;AAYD,MAAM,CAAC,IAAI,GAAG,SAAS,IAAI,CAAC,SAAS,EAAE,YAAY,EAAE;EACnD,IAAI,KAAK,GAAG,gBAAgB,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;EACtD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;GACrB;CACF,CAAC,AAEF,AAAsB,AACtB;;;;;;;;ACjEA,IAAM,YAAY,EAAlB;;AAEA,SAAS,EAAT,CAAY,SAAZ,EAAuB,IAAvB,EAA6B;YACjB,SAAV,IAAuB,UAAU,SAAV,IACnB,UAAU,SAAV,EAAqB,MAArB,CAA4B,CAAC,IAAD,CAA5B,CADmB,GAEnB,CAAC,IAAD,CAFJ;;;AAKF,SAAS,OAAT,CAAiB,SAAjB,EAA4B,IAA5B,EAAkC;SACzB,IAAP,CAAY,UAAU,SAAV,CAAZ,4BAA0D,SAA1D;YACU,SAAV,EAAqB,OAArB,CAA6B;WAAK,EAAE,IAAF,CAAL;GAA7B;;;AAGF,IAAM,WAAW;QAAA;;CAAjB,CAMA;;ACzBA,IAAM,uBAAuB;QACrB,MAAM,SAAN,CAAgB,KAAhB,CAAsB;UACpB,MAAM,SAAN,CAAgB,MADI;WAEnB,MAAM,SAAN,CAAgB,MAFG;iBAGb,MAAM,SAAN,CAAgB;GAHzB,CADqB;gBAMb,MAAM,SAAN,CAAgB,IANH;oBAOT,MAAM,SAAN,CAAgB,IAPP;kBAQX,MAAM,SAAN,CAAgB;CARlC,CAWA;;ACRA,IAAM,uBAAuB,SAAvB,oBAAuB;MAAG,WAAH,QAAG,WAAH;SAC3B;;IAAA;IACE;;MAAA;cACO,GADP;iBAEW;iBAAM,SAAS,OAAT,CAAiB,aAAjB,EAAgC,YAAY,IAA5C,CAAN;;;MAER,YAAY;;GANU;CAA7B;;AAWA,qBAAqB,SAArB,GAAiC;eAClB,MAAM,SAAN,CAAgB,KAAhB,CAAsB;UAC3B,MAAM,SAAN,CAAgB,MADW;iBAEpB,MAAM,SAAN,CAAgB,MAFI;WAG1B,MAAM,SAAN,CAAgB;GAHZ;CADf;;AAQA,IAAM,sBAAsB,SAAtB,mBAAsB,QAAiC;MAA9B,SAA8B,SAA9B,SAA8B;MAAnB,YAAmB,SAAnB,YAAmB;;SAEzD;;IAAA,EAAK,WAAU,iCAAf;IACE;;MAAA,EAAQ,WAAU,iCAAlB,EAAoD,eAAY,UAAhE;MACG,SADH;MAEE,8BAAM,WAAU,OAAhB;KAHJ;IAKE;;MAAA,EAAI,WAAU,eAAd;MACG,aAAa,GAAb,CAAiB;eAChB,oBAAC,oBAAD,IAAsB,aAAa,gBAAnC,GADgB;OAAjB;;GAPP;CADF;AAeA,oBAAoB,SAApB,GAAgC;aACnB,MAAM,SAAN,CAAgB,MADG;gBAEhB,MAAM,SAAN,CAAgB;CAFhC;;AAMA,IAAM,gBAAgB,SAAhB,aAAgB,kBAAmB;SAChC;UACC,gBAAgB,IAAhB,CAAqB,IADtB;iBAEQ,gBAAgB,IAAhB,CAAqB,WAF7B;WAGE,gBAAgB,IAAhB,CAAqB;GAH9B;CADF;;AAQA,IAAM,WAAW,SAAX,QAAW,CAAC,MAAD,EAAS,WAAT,EAAyB;;SAEjC,YAAY,KAAnB,IAA4B,OAAO,YAAY,KAAnB;IACxB,OAAO,YAAY,KAAnB,EAA0B,MAA1B,CAAiC,CAAC,WAAD,CAAjC,CADwB,GAExB,CAAC,WAAD,CAFJ;;SAIO,MAAP;CANF;;AASA,IAAM,aAAa,SAAb,UAAa,QAAoB;MAAjB,UAAiB,SAAjB,UAAiB;;MAC/B,cAAc,WACjB,GADiB,CACb,aADa,EAEjB,MAFiB,CAEV,QAFU,EAEA,EAFA,CAApB;;MAIM,eAAe,OAAO,IAAP,CAAY,WAAZ,EAClB,GADkB,CACd;WACH,oBAAC,mBAAD;iBACa,SADb;oBAEgB,YAAY,SAAZ;MAHb;GADc,CAArB;;SASE;;IAAA,EAAK,WAAU,eAAf;IACG,YADH;IAEE;;MAAA,EAAQ,WAAU,iBAAlB;MAAA;;GAHJ;CAbF;;AAqBA,WAAW,SAAX,GAAuB;cACT,MAAM,SAAN,CAAgB,OAAhB,CAAwB,oBAAxB;CADd,CAIA;;ACpFA,IAAM,oBAAoB,SAApB,iBAAoB,QAAS;SAC1B,OAAO,MAAM,EAAb,KAAoB,QAApB,IACF,OAAO,MAAM,IAAb,KAAsB,QADpB,IAEF,OAAO,MAAM,KAAb,KAAuB,QAF5B;CADF;;AAMA,IAAM,QAAQ,SAAR,KAAQ,OAAsC;MAAnC,UAAmC,QAAnC,UAAmC;MAAvB,gBAAuB,QAAvB,gBAAuB;;SAC3C,kBAAkB,UAAlB,CAAP,4BAA8D,UAA9D;;SAGE;;IAAA,EAAK,WAAU,UAAf;IACE;;MAAA,EAAK,WAAU,eAAf;MACG,KAAK,SAAL,CAAe,UAAf;KAFL;IAIE;;MAAA,EAAK,WAAU,iBAAf;MACG,KAAK,SAAL,CAAe,gBAAf;;GANP;CAHF;;AAeA,MAAM,SAAN,GAAkB;cACJ,MAAM,SAAN,CAAgB,MADZ;oBAEE,MAAM,SAAN,CAAgB;CAFpC,CAKA;;ACxBA,IAAM,SAAS,SAAT,MAAS,QAAS;MAEpB,WAFoB,GAIlB,KAJkB,CAEpB,WAFoB;MAGpB,UAHoB,GAIlB,KAJkB,CAGpB,UAHoB;;;SAOpB;;IAAA;IACG,YAAY,OAAZ,CAAoB;aACnB,oBAAC,KAAD;oBACc,SADd;0BAEoB,WAAW,UAAU,IAArB;QAHD;KAApB;GAFL;CANF;;AAkBA,OAAO,SAAP,GAAmB;eACJ,MAAM,SAAN,CAAgB,KADZ;cAEL,MAAM,SAAN,CAAgB;CAF9B,CAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICpBqBA;;;uBACP,KAAZ,EAAmB;;;yHACX,KADW;;UAEZ,KAAL,GAAa;kBACC,MAAM,UADP;mBAEE;KAFf;;UAKK,WAAL,GAAmB,MAAK,WAAL,CAAiB,IAAjB,OAAnB;UACK,WAAL,GAAmB,MAAK,WAAL,CAAiB,IAAjB,OAAnB;UACK,YAAL,GAAoB,MAAK,YAAL,CAAkB,IAAlB,OAApB;;aAES,EAAT,CAAY,aAAZ,EAA2B,MAAK,WAAhC;aACS,EAAT,CAAY,aAAZ,EAA2B,MAAK,WAAhC;;;;;;gCAGU,WAAW;UACf,kBAAkB,KAAK,KAAL,CAAW,UAAX,CAAsB,IAAtB,CAA2B;eAAK,EAAE,IAAF,CAAO,IAAP,KAAgB,SAArB;OAA3B,CAAxB;;aAEO,eAAP,cAAkC,SAAlC;;UAEM,eAAe,gBAAgB,YAAhB,EAArB;mBACa,EAAb,GAAkB,KAAK,GAAL,EAAlB;;UAEM,cAAc,KAAK,KAAL,CAAW,WAAX,CAAuB,MAAvB,CAA8B,CAAC,YAAD,CAA9B,CAApB;WACK,QAAL,CAAc,EAAE,wBAAF,EAAd;;;;gCAGU,YAAY;UAChB,cAAc,KAAK,KAAL,CAAW,WAAX,CAAuB,MAAvB,CAClB;eAAS,MAAM,EAAN,KAAa,WAAW,EAAjC;OADkB,CAApB;;aAKE,YAAY,MAAZ,GAAqB,KAAK,KAAL,CAAW,WADlC,EAEE,oFAFF;WAIK,QAAL,CAAc,EAAE,wBAAF,EAAd;;;;iCAGW,SAAS;aAElB,CAAC,KAAK,KAAL,CAAW,UAAX,CAAsB,IAAtB,CAA2B;eAAK,EAAE,IAAF,CAAO,IAAP,KAAgB,QAAQ,IAAR,CAAa,IAAlC;OAA3B,CADH,sBAEoB,QAAQ,IAAR,CAAa,IAFjC;;UAKM,aAAa,KAAK,KAAL,CAAW,UAAX,CAAsB,MAAtB,CAA6B,CAAC,OAAD,CAA7B,CAAnB;;WAEK,QAAL,CAAc,EAAE,sBAAF,EAAd;;;;6BAGO;mBAIH,KAAK,KAJF;UAEL,UAFK,UAEL,UAFK;UAGL,WAHK,UAGL,WAHK;;;aAOL;;QAAA,EAAK,WAAU,gBAAf;QACE,oBAAC,UAAD,IAAY,YAAY,UAAxB,GADF;QAEE,oBAAC,MAAD,IAAQ,aAAa,WAArB,EAAkC,YAAY,UAA9C;OAHJ;;;;EAzDqC,MAAM;;AAkE/CA,cAAY,SAAZ,GAAwB;cACV,MAAM,SAAN,CAAgB,OAAhB,CAAwB,oBAAxB;CADd;;ACvEA,IAAM,WAAW;QACT,WADS;SAER,iBAFQ;eAGF;CAHf;;AAMA,IAAM,eAAe,SAAf,YAAe,GAAM;MACnB,kBAAkB;;cAEZ,KAFY;;WAIf,aAJe;iBAKT;GALf;;SAQO,OAAO,MAAP,CACL,EADK,EAEL,QAFK,EAGL,eAHK,CAAP;CATF;;;;;;;;AAsBA,IAAM,mBAAmB,SAAnB,gBAAmB,OAAuB;MAApB,KAAoB,QAApB,KAAoB;MAAb,MAAa,QAAb,MAAa;;SAE5C;;IAAA;IACE;;MAAA;MAAA;KADF;IAEE;;MAAA;MAAA;MAEE,+BAAO,MAAK,MAAZ;;GALN;CADF;;AAYA,IAAM,iBAAiB,SAAjB,cAAiB,QAAuB;MAApB,KAAoB,SAApB,KAAoB;MAAb,MAAa,SAAb,MAAa;;SAE1C;;IAAA;IACE;;MAAA;MAAA;KADF;IAEE,+BAAO,MAAK,MAAZ;GAHJ;CADF;;AASA,IAAM,UAAU;QACR,QADQ;4BAAA;oCAAA;;CAAhB,CAOA;;;;ACzDA,AACA,AACA,AACA;AAIA,AAEA,SAAS,WAAT,CAAqB,SAArB,EAAiD;MAAjB,UAAiB,uEAAJ,EAAI;;SAE7C,aAAa,UAAU,QADzB,0BAEwB,SAFxB;;MAKM,eAAe,CACnB,OADmB,CAArB;;MAIM,mBAAmB,WAAW,MAAX,CAAkB,YAAlB,CAAzB;;WAES,MAAT,CAAgB,oBAACC,aAAD,IAAkB,YAAY,gBAA9B,GAAhB,EAAoE,SAApE;;OAEK,WAAL,GAAmB,YAAM;UAAQ,IAAI,KAAJ,CAAU,aAAV,CAAN;GAA3B;CAGF;;;;","sourceRoot":"/source/"}